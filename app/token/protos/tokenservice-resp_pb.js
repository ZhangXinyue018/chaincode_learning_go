// source: tokenservice-resp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var tokenbalance_pb = require('./tokenbalance_pb.js');
goog.object.extend(proto, tokenbalance_pb);
goog.exportSymbol('proto.protos.CreateTokenResponse', null, global);
goog.exportSymbol('proto.protos.GetTokenResponse', null, global);
goog.exportSymbol('proto.protos.IssueTokenResponse', null, global);
goog.exportSymbol('proto.protos.PaginateTokenByTokenNameResponse', null, global);
goog.exportSymbol('proto.protos.PaginateTokenByUserNameResponse', null, global);
goog.exportSymbol('proto.protos.PingResponse', null, global);
goog.exportSymbol('proto.protos.TransferTokenResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.PingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PingResponse.displayName = 'proto.protos.PingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.CreateTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.CreateTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.CreateTokenResponse.displayName = 'proto.protos.CreateTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.IssueTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.IssueTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.IssueTokenResponse.displayName = 'proto.protos.IssueTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.TransferTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.TransferTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.TransferTokenResponse.displayName = 'proto.protos.TransferTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.GetTokenResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.GetTokenResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.GetTokenResponse.displayName = 'proto.protos.GetTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PaginateTokenByUserNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.PaginateTokenByUserNameResponse.repeatedFields_, null);
};
goog.inherits(proto.protos.PaginateTokenByUserNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PaginateTokenByUserNameResponse.displayName = 'proto.protos.PaginateTokenByUserNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PaginateTokenByTokenNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protos.PaginateTokenByTokenNameResponse.repeatedFields_, null);
};
goog.inherits(proto.protos.PaginateTokenByTokenNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PaginateTokenByTokenNameResponse.displayName = 'proto.protos.PaginateTokenByTokenNameResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PingResponse}
 */
proto.protos.PingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PingResponse;
  return proto.protos.PingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PingResponse}
 */
proto.protos.PingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.PingResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.PingResponse} returns this
*/
proto.protos.PingResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PingResponse} returns this
 */
proto.protos.PingResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PingResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.CreateTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.CreateTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.CreateTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.CreateTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.CreateTokenResponse}
 */
proto.protos.CreateTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.CreateTokenResponse;
  return proto.protos.CreateTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.CreateTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.CreateTokenResponse}
 */
proto.protos.CreateTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.CreateTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.CreateTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.CreateTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.CreateTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.CreateTokenResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.CreateTokenResponse} returns this
*/
proto.protos.CreateTokenResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.CreateTokenResponse} returns this
 */
proto.protos.CreateTokenResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.CreateTokenResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.IssueTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.IssueTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.IssueTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.IssueTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.IssueTokenResponse}
 */
proto.protos.IssueTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.IssueTokenResponse;
  return proto.protos.IssueTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.IssueTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.IssueTokenResponse}
 */
proto.protos.IssueTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.IssueTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.IssueTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.IssueTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.IssueTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.IssueTokenResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.IssueTokenResponse} returns this
*/
proto.protos.IssueTokenResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.IssueTokenResponse} returns this
 */
proto.protos.IssueTokenResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.IssueTokenResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.TransferTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.TransferTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.TransferTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.TransferTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.TransferTokenResponse}
 */
proto.protos.TransferTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.TransferTokenResponse;
  return proto.protos.TransferTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.TransferTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.TransferTokenResponse}
 */
proto.protos.TransferTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.TransferTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.TransferTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.TransferTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.TransferTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.TransferTokenResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.TransferTokenResponse} returns this
*/
proto.protos.TransferTokenResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.TransferTokenResponse} returns this
 */
proto.protos.TransferTokenResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.TransferTokenResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.GetTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.GetTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.GetTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.GetTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f),
    result: (f = msg.getResult()) && tokenbalance_pb.TokenBalancePB.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.GetTokenResponse}
 */
proto.protos.GetTokenResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.GetTokenResponse;
  return proto.protos.GetTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.GetTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.GetTokenResponse}
 */
proto.protos.GetTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    case 2:
      var value = new tokenbalance_pb.TokenBalancePB;
      reader.readMessage(value,tokenbalance_pb.TokenBalancePB.deserializeBinaryFromReader);
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.GetTokenResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.GetTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.GetTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.GetTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
  f = message.getResult();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tokenbalance_pb.TokenBalancePB.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.GetTokenResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.GetTokenResponse} returns this
*/
proto.protos.GetTokenResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.GetTokenResponse} returns this
 */
proto.protos.GetTokenResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.GetTokenResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TokenBalancePB Result = 2;
 * @return {?proto.protos.TokenBalancePB}
 */
proto.protos.GetTokenResponse.prototype.getResult = function() {
  return /** @type{?proto.protos.TokenBalancePB} */ (
    jspb.Message.getWrapperField(this, tokenbalance_pb.TokenBalancePB, 2));
};


/**
 * @param {?proto.protos.TokenBalancePB|undefined} value
 * @return {!proto.protos.GetTokenResponse} returns this
*/
proto.protos.GetTokenResponse.prototype.setResult = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.GetTokenResponse} returns this
 */
proto.protos.GetTokenResponse.prototype.clearResult = function() {
  return this.setResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.GetTokenResponse.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.PaginateTokenByUserNameResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PaginateTokenByUserNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PaginateTokenByUserNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByUserNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f),
    pagesize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bookmark: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    tokenbalance_pb.TokenBalancePB.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PaginateTokenByUserNameResponse}
 */
proto.protos.PaginateTokenByUserNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PaginateTokenByUserNameResponse;
  return proto.protos.PaginateTokenByUserNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PaginateTokenByUserNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PaginateTokenByUserNameResponse}
 */
proto.protos.PaginateTokenByUserNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmark(value);
      break;
    case 4:
      var value = new tokenbalance_pb.TokenBalancePB;
      reader.readMessage(value,tokenbalance_pb.TokenBalancePB.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PaginateTokenByUserNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PaginateTokenByUserNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByUserNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBookmark();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tokenbalance_pb.TokenBalancePB.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.PaginateTokenByUserNameResponse} returns this
*/
proto.protos.PaginateTokenByUserNameResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PaginateTokenByUserNameResponse} returns this
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 PageSize = 2;
 * @return {number}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.PaginateTokenByUserNameResponse} returns this
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string BookMark = 3;
 * @return {string}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.getBookmark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenByUserNameResponse} returns this
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.setBookmark = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated TokenBalancePB Results = 4;
 * @return {!Array<!proto.protos.TokenBalancePB>}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.protos.TokenBalancePB>} */ (
    jspb.Message.getRepeatedWrapperField(this, tokenbalance_pb.TokenBalancePB, 4));
};


/**
 * @param {!Array<!proto.protos.TokenBalancePB>} value
 * @return {!proto.protos.PaginateTokenByUserNameResponse} returns this
*/
proto.protos.PaginateTokenByUserNameResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.protos.TokenBalancePB=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.TokenBalancePB}
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.protos.TokenBalancePB, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.PaginateTokenByUserNameResponse} returns this
 */
proto.protos.PaginateTokenByUserNameResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protos.PaginateTokenByTokenNameResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PaginateTokenByTokenNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PaginateTokenByTokenNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByTokenNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonresponse: (f = msg.getCommonresponse()) && common_pb.CommonResponse.toObject(includeInstance, f),
    pagesize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bookmark: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    tokenbalance_pb.TokenBalancePB.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PaginateTokenByTokenNameResponse}
 */
proto.protos.PaginateTokenByTokenNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PaginateTokenByTokenNameResponse;
  return proto.protos.PaginateTokenByTokenNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PaginateTokenByTokenNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PaginateTokenByTokenNameResponse}
 */
proto.protos.PaginateTokenByTokenNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonResponse;
      reader.readMessage(value,common_pb.CommonResponse.deserializeBinaryFromReader);
      msg.setCommonresponse(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmark(value);
      break;
    case 4:
      var value = new tokenbalance_pb.TokenBalancePB;
      reader.readMessage(value,tokenbalance_pb.TokenBalancePB.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PaginateTokenByTokenNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PaginateTokenByTokenNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByTokenNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonresponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonResponse.serializeBinaryToWriter
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getBookmark();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      tokenbalance_pb.TokenBalancePB.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResponse CommonResponse = 1;
 * @return {?proto.protos.CommonResponse}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.getCommonresponse = function() {
  return /** @type{?proto.protos.CommonResponse} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonResponse, 1));
};


/**
 * @param {?proto.protos.CommonResponse|undefined} value
 * @return {!proto.protos.PaginateTokenByTokenNameResponse} returns this
*/
proto.protos.PaginateTokenByTokenNameResponse.prototype.setCommonresponse = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PaginateTokenByTokenNameResponse} returns this
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.clearCommonresponse = function() {
  return this.setCommonresponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.hasCommonresponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 PageSize = 2;
 * @return {number}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.PaginateTokenByTokenNameResponse} returns this
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string BookMark = 3;
 * @return {string}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.getBookmark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenByTokenNameResponse} returns this
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.setBookmark = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated TokenBalancePB Results = 4;
 * @return {!Array<!proto.protos.TokenBalancePB>}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.protos.TokenBalancePB>} */ (
    jspb.Message.getRepeatedWrapperField(this, tokenbalance_pb.TokenBalancePB, 4));
};


/**
 * @param {!Array<!proto.protos.TokenBalancePB>} value
 * @return {!proto.protos.PaginateTokenByTokenNameResponse} returns this
*/
proto.protos.PaginateTokenByTokenNameResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.protos.TokenBalancePB=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protos.TokenBalancePB}
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.protos.TokenBalancePB, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.protos.PaginateTokenByTokenNameResponse} returns this
 */
proto.protos.PaginateTokenByTokenNameResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


goog.object.extend(exports, proto.protos);
