// source: tokenservice-req.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.protos.CreateTokenRequest', null, global);
goog.exportSymbol('proto.protos.GetTokenRequest', null, global);
goog.exportSymbol('proto.protos.IssueTokenRequest', null, global);
goog.exportSymbol('proto.protos.PaginateTokenByTokenNameRequest', null, global);
goog.exportSymbol('proto.protos.PaginateTokenByUserNameRequest', null, global);
goog.exportSymbol('proto.protos.PaginateTokenLogByFromUserNameRequest', null, global);
goog.exportSymbol('proto.protos.PaginateTokenLogByToUserNameRequest', null, global);
goog.exportSymbol('proto.protos.PingRequest', null, global);
goog.exportSymbol('proto.protos.TransferTokenRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.PingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PingRequest.displayName = 'proto.protos.PingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.CreateTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.CreateTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.CreateTokenRequest.displayName = 'proto.protos.CreateTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.IssueTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.IssueTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.IssueTokenRequest.displayName = 'proto.protos.IssueTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.TransferTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.TransferTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.TransferTokenRequest.displayName = 'proto.protos.TransferTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.GetTokenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.GetTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.GetTokenRequest.displayName = 'proto.protos.GetTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PaginateTokenByUserNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.PaginateTokenByUserNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PaginateTokenByUserNameRequest.displayName = 'proto.protos.PaginateTokenByUserNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PaginateTokenByTokenNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.PaginateTokenByTokenNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PaginateTokenByTokenNameRequest.displayName = 'proto.protos.PaginateTokenByTokenNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PaginateTokenLogByFromUserNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.PaginateTokenLogByFromUserNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PaginateTokenLogByFromUserNameRequest.displayName = 'proto.protos.PaginateTokenLogByFromUserNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protos.PaginateTokenLogByToUserNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protos.PaginateTokenLogByToUserNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protos.PaginateTokenLogByToUserNameRequest.displayName = 'proto.protos.PaginateTokenLogByToUserNameRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PingRequest}
 */
proto.protos.PingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PingRequest;
  return proto.protos.PingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PingRequest}
 */
proto.protos.PingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.PingRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.PingRequest} returns this
*/
proto.protos.PingRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PingRequest} returns this
 */
proto.protos.PingRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PingRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.CreateTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.CreateTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.CreateTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.CreateTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    tokenname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    maxamount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 4, ""),
    issuer: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.CreateTokenRequest}
 */
proto.protos.CreateTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.CreateTokenRequest;
  return proto.protos.CreateTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.CreateTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.CreateTokenRequest}
 */
proto.protos.CreateTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxamount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIssuer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.CreateTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.CreateTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.CreateTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.CreateTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getTokenname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaxamount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIssuer();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.CreateTokenRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.CreateTokenRequest} returns this
*/
proto.protos.CreateTokenRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.CreateTokenRequest} returns this
 */
proto.protos.CreateTokenRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.CreateTokenRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string TokenName = 2;
 * @return {string}
 */
proto.protos.CreateTokenRequest.prototype.getTokenname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.CreateTokenRequest} returns this
 */
proto.protos.CreateTokenRequest.prototype.setTokenname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 MaxAmount = 3;
 * @return {number}
 */
proto.protos.CreateTokenRequest.prototype.getMaxamount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.CreateTokenRequest} returns this
 */
proto.protos.CreateTokenRequest.prototype.setMaxamount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string Creator = 4;
 * @return {string}
 */
proto.protos.CreateTokenRequest.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.CreateTokenRequest} returns this
 */
proto.protos.CreateTokenRequest.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Issuer = 5;
 * @return {string}
 */
proto.protos.CreateTokenRequest.prototype.getIssuer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.CreateTokenRequest} returns this
 */
proto.protos.CreateTokenRequest.prototype.setIssuer = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.IssueTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.IssueTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.IssueTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.IssueTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tokenname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tokenamount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.IssueTokenRequest}
 */
proto.protos.IssueTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.IssueTokenRequest;
  return proto.protos.IssueTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.IssueTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.IssueTokenRequest}
 */
proto.protos.IssueTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTokenamount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.IssueTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.IssueTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.IssueTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.IssueTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokenname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTokenamount();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.IssueTokenRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.IssueTokenRequest} returns this
*/
proto.protos.IssueTokenRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.IssueTokenRequest} returns this
 */
proto.protos.IssueTokenRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.IssueTokenRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string UserName = 2;
 * @return {string}
 */
proto.protos.IssueTokenRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.IssueTokenRequest} returns this
 */
proto.protos.IssueTokenRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string TokenName = 3;
 * @return {string}
 */
proto.protos.IssueTokenRequest.prototype.getTokenname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.IssueTokenRequest} returns this
 */
proto.protos.IssueTokenRequest.prototype.setTokenname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 TokenAmount = 4;
 * @return {number}
 */
proto.protos.IssueTokenRequest.prototype.getTokenamount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.IssueTokenRequest} returns this
 */
proto.protos.IssueTokenRequest.prototype.setTokenamount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.TransferTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.TransferTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.TransferTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.TransferTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    fromusername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tousername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tokenname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    tokenamount: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.TransferTokenRequest}
 */
proto.protos.TransferTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.TransferTokenRequest;
  return proto.protos.TransferTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.TransferTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.TransferTokenRequest}
 */
proto.protos.TransferTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromusername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTousername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenname(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTokenamount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.TransferTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.TransferTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.TransferTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.TransferTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getFromusername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTousername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTokenname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTokenamount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.TransferTokenRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.TransferTokenRequest} returns this
*/
proto.protos.TransferTokenRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.TransferTokenRequest} returns this
 */
proto.protos.TransferTokenRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.TransferTokenRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string FromUserName = 2;
 * @return {string}
 */
proto.protos.TransferTokenRequest.prototype.getFromusername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.TransferTokenRequest} returns this
 */
proto.protos.TransferTokenRequest.prototype.setFromusername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ToUserName = 3;
 * @return {string}
 */
proto.protos.TransferTokenRequest.prototype.getTousername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.TransferTokenRequest} returns this
 */
proto.protos.TransferTokenRequest.prototype.setTousername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string TokenName = 4;
 * @return {string}
 */
proto.protos.TransferTokenRequest.prototype.getTokenname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.TransferTokenRequest} returns this
 */
proto.protos.TransferTokenRequest.prototype.setTokenname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 TokenAmount = 5;
 * @return {number}
 */
proto.protos.TransferTokenRequest.prototype.getTokenamount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.TransferTokenRequest} returns this
 */
proto.protos.TransferTokenRequest.prototype.setTokenamount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.GetTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.GetTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.GetTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.GetTokenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tokenname: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.GetTokenRequest}
 */
proto.protos.GetTokenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.GetTokenRequest;
  return proto.protos.GetTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.GetTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.GetTokenRequest}
 */
proto.protos.GetTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.GetTokenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.GetTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.GetTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.GetTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokenname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.GetTokenRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.GetTokenRequest} returns this
*/
proto.protos.GetTokenRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.GetTokenRequest} returns this
 */
proto.protos.GetTokenRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.GetTokenRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string UserName = 2;
 * @return {string}
 */
proto.protos.GetTokenRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.GetTokenRequest} returns this
 */
proto.protos.GetTokenRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string TokenName = 3;
 * @return {string}
 */
proto.protos.GetTokenRequest.prototype.getTokenname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.GetTokenRequest} returns this
 */
proto.protos.GetTokenRequest.prototype.setTokenname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PaginateTokenByUserNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PaginateTokenByUserNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByUserNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bookmark: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PaginateTokenByUserNameRequest}
 */
proto.protos.PaginateTokenByUserNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PaginateTokenByUserNameRequest;
  return proto.protos.PaginateTokenByUserNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PaginateTokenByUserNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PaginateTokenByUserNameRequest}
 */
proto.protos.PaginateTokenByUserNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PaginateTokenByUserNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PaginateTokenByUserNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByUserNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBookmark();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.PaginateTokenByUserNameRequest} returns this
*/
proto.protos.PaginateTokenByUserNameRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PaginateTokenByUserNameRequest} returns this
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string UserName = 2;
 * @return {string}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenByUserNameRequest} returns this
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 PageSize = 3;
 * @return {number}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.PaginateTokenByUserNameRequest} returns this
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string BookMark = 4;
 * @return {string}
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.getBookmark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenByUserNameRequest} returns this
 */
proto.protos.PaginateTokenByUserNameRequest.prototype.setBookmark = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PaginateTokenByTokenNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PaginateTokenByTokenNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByTokenNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    tokenname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bookmark: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PaginateTokenByTokenNameRequest}
 */
proto.protos.PaginateTokenByTokenNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PaginateTokenByTokenNameRequest;
  return proto.protos.PaginateTokenByTokenNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PaginateTokenByTokenNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PaginateTokenByTokenNameRequest}
 */
proto.protos.PaginateTokenByTokenNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PaginateTokenByTokenNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PaginateTokenByTokenNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenByTokenNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getTokenname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBookmark();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.PaginateTokenByTokenNameRequest} returns this
*/
proto.protos.PaginateTokenByTokenNameRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PaginateTokenByTokenNameRequest} returns this
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string TokenName = 2;
 * @return {string}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.getTokenname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenByTokenNameRequest} returns this
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.setTokenname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 PageSize = 3;
 * @return {number}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.PaginateTokenByTokenNameRequest} returns this
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string BookMark = 4;
 * @return {string}
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.getBookmark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenByTokenNameRequest} returns this
 */
proto.protos.PaginateTokenByTokenNameRequest.prototype.setBookmark = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PaginateTokenLogByFromUserNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PaginateTokenLogByFromUserNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    fromusername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bookmark: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PaginateTokenLogByFromUserNameRequest;
  return proto.protos.PaginateTokenLogByFromUserNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PaginateTokenLogByFromUserNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromusername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PaginateTokenLogByFromUserNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PaginateTokenLogByFromUserNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getFromusername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBookmark();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest} returns this
*/
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string FromUserName = 2;
 * @return {string}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.getFromusername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.setFromusername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 PageSize = 3;
 * @return {number}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string BookMark = 4;
 * @return {string}
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.getBookmark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenLogByFromUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByFromUserNameRequest.prototype.setBookmark = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protos.PaginateTokenLogByToUserNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protos.PaginateTokenLogByToUserNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenLogByToUserNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonrequest: (f = msg.getCommonrequest()) && common_pb.CommonRequest.toObject(includeInstance, f),
    tousername: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pagesize: jspb.Message.getFieldWithDefault(msg, 3, 0),
    bookmark: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protos.PaginateTokenLogByToUserNameRequest;
  return proto.protos.PaginateTokenLogByToUserNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protos.PaginateTokenLogByToUserNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonRequest;
      reader.readMessage(value,common_pb.CommonRequest.deserializeBinaryFromReader);
      msg.setCommonrequest(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTousername(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPagesize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBookmark(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protos.PaginateTokenLogByToUserNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protos.PaginateTokenLogByToUserNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protos.PaginateTokenLogByToUserNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonrequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonRequest.serializeBinaryToWriter
    );
  }
  f = message.getTousername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPagesize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getBookmark();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional CommonRequest CommonRequest = 1;
 * @return {?proto.protos.CommonRequest}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.getCommonrequest = function() {
  return /** @type{?proto.protos.CommonRequest} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonRequest, 1));
};


/**
 * @param {?proto.protos.CommonRequest|undefined} value
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest} returns this
*/
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.setCommonrequest = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.clearCommonrequest = function() {
  return this.setCommonrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.hasCommonrequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string ToUserName = 2;
 * @return {string}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.getTousername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.setTousername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 PageSize = 3;
 * @return {number}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.getPagesize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.setPagesize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string BookMark = 4;
 * @return {string}
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.getBookmark = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.protos.PaginateTokenLogByToUserNameRequest} returns this
 */
proto.protos.PaginateTokenLogByToUserNameRequest.prototype.setBookmark = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.protos);
